<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="edu.cqgcxy.mapper.ReceiveEmailMapper">
  <resultMap id="BaseResultMap" type="edu.cqgcxy.model.ReceiveEmail">
    <id column="receiveEmailID" jdbcType="INTEGER" property="receiveemailid" />
    <result column="userID" jdbcType="INTEGER" property="userid" />
    <result column="sendID" jdbcType="INTEGER" property="sendid" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="isRead" jdbcType="INTEGER" property="isread" />
    <result column="isDel" jdbcType="INTEGER" property="isdel" />
    <result column="isSave" jdbcType="INTEGER" property="issave" />
    <result column="sendTime" jdbcType="TIMESTAMP" property="sendtime" />
    <result column="annexSign" jdbcType="VARCHAR" property="annexsign" />
    <result column="type" jdbcType="INTEGER" property="type" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    receiveEmailID, userID, sendID, title, message, isRead, isDel, isSave, sendTime, 
    annexSign, type
  </sql>
  <select id="selectByExample" parameterType="edu.cqgcxy.model.ReceiveEmailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from receive_email
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from receive_email
    where receiveEmailID = #{receiveemailid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from receive_email
    where receiveEmailID = #{receiveemailid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="edu.cqgcxy.model.ReceiveEmailExample">
    delete from receive_email
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="edu.cqgcxy.model.ReceiveEmail">
    <selectKey keyProperty="receiveemailid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into receive_email (userID, sendID, title, 
      message, isRead, isDel, 
      isSave, sendTime, annexSign, 
      type)
    values (#{userid,jdbcType=INTEGER}, #{sendid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, 
      #{message,jdbcType=VARCHAR}, #{isread,jdbcType=INTEGER}, #{isdel,jdbcType=INTEGER}, 
      #{issave,jdbcType=INTEGER}, #{sendtime,jdbcType=TIMESTAMP}, #{annexsign,jdbcType=VARCHAR}, 
      #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="edu.cqgcxy.model.ReceiveEmail">
    <selectKey keyProperty="receiveemailid" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into receive_email
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userID,
      </if>
      <if test="sendid != null">
        sendID,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="isread != null">
        isRead,
      </if>
      <if test="isdel != null">
        isDel,
      </if>
      <if test="issave != null">
        isSave,
      </if>
      <if test="sendtime != null">
        sendTime,
      </if>
      <if test="annexsign != null">
        annexSign,
      </if>
      <if test="type != null">
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="sendid != null">
        #{sendid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="isread != null">
        #{isread,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        #{isdel,jdbcType=INTEGER},
      </if>
      <if test="issave != null">
        #{issave,jdbcType=INTEGER},
      </if>
      <if test="sendtime != null">
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="annexsign != null">
        #{annexsign,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="edu.cqgcxy.model.ReceiveEmailExample" resultType="java.lang.Long">
    select count(*) from receive_email
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update receive_email
    <set>
      <if test="record.receiveemailid != null">
        receiveEmailID = #{record.receiveemailid,jdbcType=INTEGER},
      </if>
      <if test="record.userid != null">
        userID = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.sendid != null">
        sendID = #{record.sendid,jdbcType=INTEGER},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null">
        message = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.isread != null">
        isRead = #{record.isread,jdbcType=INTEGER},
      </if>
      <if test="record.isdel != null">
        isDel = #{record.isdel,jdbcType=INTEGER},
      </if>
      <if test="record.issave != null">
        isSave = #{record.issave,jdbcType=INTEGER},
      </if>
      <if test="record.sendtime != null">
        sendTime = #{record.sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.annexsign != null">
        annexSign = #{record.annexsign,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update receive_email
    set receiveEmailID = #{record.receiveemailid,jdbcType=INTEGER},
      userID = #{record.userid,jdbcType=INTEGER},
      sendID = #{record.sendid,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      message = #{record.message,jdbcType=VARCHAR},
      isRead = #{record.isread,jdbcType=INTEGER},
      isDel = #{record.isdel,jdbcType=INTEGER},
      isSave = #{record.issave,jdbcType=INTEGER},
      sendTime = #{record.sendtime,jdbcType=TIMESTAMP},
      annexSign = #{record.annexsign,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="edu.cqgcxy.model.ReceiveEmail">
    update receive_email
    <set>
      <if test="userid != null">
        userID = #{userid,jdbcType=INTEGER},
      </if>
      <if test="sendid != null">
        sendID = #{sendid,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="isread != null">
        isRead = #{isread,jdbcType=INTEGER},
      </if>
      <if test="isdel != null">
        isDel = #{isdel,jdbcType=INTEGER},
      </if>
      <if test="issave != null">
        isSave = #{issave,jdbcType=INTEGER},
      </if>
      <if test="sendtime != null">
        sendTime = #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="annexsign != null">
        annexSign = #{annexsign,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where receiveEmailID = #{receiveemailid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="edu.cqgcxy.model.ReceiveEmail">
    update receive_email
    set userID = #{userid,jdbcType=INTEGER},
      sendID = #{sendid,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      message = #{message,jdbcType=VARCHAR},
      isRead = #{isread,jdbcType=INTEGER},
      isDel = #{isdel,jdbcType=INTEGER},
      isSave = #{issave,jdbcType=INTEGER},
      sendTime = #{sendtime,jdbcType=TIMESTAMP},
      annexSign = #{annexsign,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER}
    where receiveEmailID = #{receiveemailid,jdbcType=INTEGER}
  </update>
</mapper>